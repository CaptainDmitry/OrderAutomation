@model OrderAutomation.Models.ProductReceipt

@{
    ViewData["Title"] = "Удаление поступления";
}

<h1>Удаление поступления товара</h1>

<div class="alert alert-danger mb-4">
    <h3>Вы уверены, что хотите удалить это поступление?</h3>
    <p>Это действие невозможно отменить. Удаление поступления изменит текущее количество товара на складе.</p>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Информация о поступлении</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Product)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Product.Name)</dd>
                    
                    <dt class="col-sm-4">Артикул</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Product.SKU)</dd>
                    
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.ReceiptDate)</dt>
                    <dd class="col-sm-8">@Model.ReceiptDate.ToShortDateString()</dd>
                    
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quantity)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quantity)</dd>
                    
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.PurchasePrice)</dt>
                    <dd class="col-sm-8">
                        @(Model.PurchasePrice.HasValue ? Model.PurchasePrice.Value.ToString("C") : "-")
                    </dd>
                </dl>
            </div>
        </div>
        
        <form asp-action="Delete">
            <input type="hidden" asp-for="Id" />
            <button type="submit" class="btn btn-danger"><i class="bi bi-trash"></i> Удалить</button>
            <a asp-action="Index" class="btn btn-outline-secondary">Вернуться к списку</a>
        </form>
    </div>
</div> 